name: Run Test Suite

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  COVERAGE_IGOR_VERBOSE: 1
  FORCE_COLOR: 1 # pytest output color

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  changed-files:
    name: Changed Files
    runs-on: ubuntu-latest
    outputs:
      docs-change: ${{ steps.changed-files.outputs.docs-change_any_modified == 'true' }}
      python-change: ${{ steps.changed-files.outputs.python-change_any_modified == 'true' }}
      project-change: ${{ steps.changed-files.outputs.project-change_any_modified == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 50 # Assume PRs are less than 50 commits

      - name: Find changed files
        uses: tj-actions/changed-files@v45
        id: changed-files
        with:
          files_yaml: |
            common: &common
              - .github/workflows/test-worker.yml

            docs-change:
              - *common
              - docs/**
              - package.json
              - package-lock.json

            python-change:
              - *common
              - src/**
              - tests/**

  test-python:
    name: "${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}-latest"
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.python-change == 'true' }}

    continue-on-error: ${{ startsWith(matrix.python-version, '~') }} # Allows unstable Python versions to fail

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        python-version: ["3.9", "3.10", "3.11", "3.x"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          set -xe
          python -m pip install poetry coverage pytest
          python -m poetry install

      - name: Test with pytest
        run: |
          set -xe
          python -m poetry run pytest -sv

  test-docs:
    name: Docs
    runs-on: ubuntu-latest
    needs: [changed-files]
    if: ${{ needs.changed-files.outputs.docs-change == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4.1.0
        with:
          cache: npm

      - name: Install dependencies
        run: |
          set -xe
          npm i

      - name: Lint docs
        run: |
          set -xe
          npm run test:docs

  check:
    if: always()
    name: Tests Successful
    runs-on: ubuntu-latest
    needs: [test-python, test-docs]

    steps:
      - name: Whether the whole test suite passed
        uses: re-actors/alls-green@v1.2.2
        with:
          allowed-skips: ${{ toJSON(needs) }}
          jobs: ${{ toJSON(needs) }}
